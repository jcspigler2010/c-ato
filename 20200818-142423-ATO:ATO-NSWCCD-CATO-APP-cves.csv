CVE,CVSS,PackageName,Status,Description,Tag
CVE-2019-15847,7.5,gcc,fixed in 9.3.0-r0,The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example within a single execution of a program the output of every __builtin_darn() call may be the same.
NODE-SECURITY-568,9,constantinople,fixed in >=3.1.1,Versions of `constantinople` prior to 3.1.1 are vulnerable to a sandbox bypass which can lead to arbitrary code execution.
NODE-SECURITY-1179,1,minimist,fixed in >=0.2.1 <1.0.0 || >=1.2.3,Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized allowing an attacker to modify the prototype of `Object` causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.   This is exploitable if attackers have control over the arguments being passed to `minimist`. 
NODE-SECURITY-785,1,clean-css,fixed in >=4.1.11,Version of `clean-css` prior to 4.1.11 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.
CVE-2015-8858,7.5,uglify-js,fixed in >=2.6.0,The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call aka a \"regular expression denial of service (ReDoS).\"
CVE-2015-8857,9.8,uglify-js,fixed in >= 2.4.24,The uglify-js package before 2.4.24 for Node.js does not properly account for non-boolean values when rewriting boolean expressions which might allow attackers to bypass security mechanisms or possibly have unspecified other impact by leveraging improperly rewritten Javascript.
CVE-2020-8116,9.8,dot-prop,fixed in >=4.2.1 <5.0.0 || >=5.1.1,Prototype pollution vulnerability in dot-prop npm package version 5.1.0 and earlier allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.
CVE-2020-15095,5.5,npm,fixed in >=6.14.6,Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like \"<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>\". The password value is not redacted and is printed to stdout and also to any generated log files.
CVE-2018-12886,8.1,gcc-8,open,stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard which allows an attacker to bypass the protection of -fstack-protector -fstack-protector-all -fstack-protector-strong and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.
CVE-2020-13871,7.5,sqlite3,open,SQLite 3.32.2 has a use-after-free in resetAccumulator in select.c because the parse tree rewrite for window functions is too late.
CVE-2020-13630,7,sqlite3,open,ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow related to the snippet feature.
CVE-2020-15358,5.5,sqlite3,open,In SQLite before 3.32.3 select.c mishandles query-flattener optimization leading to a multiSelectOrderBy heap overflow because of misuse of transitive properties for constant propagation.
CVE-2020-13632,5.5,sqlite3,open,ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.
CVE-2020-13631,5.5,sqlite3,open,SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables related to alter.c and build.c.
CVE-2020-6096,8.1,glibc,open,An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the \'num\' parameter results in a signed comparison vulnerability. If an attacker underflows the \'num\' parameter to memcpy() this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.
CVE-2019-17543,8.1,lz4,open,LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize) affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"
CVE-2019-3844,7.8,systemd,open,It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future when the GID will be recycled.
CVE-2019-3843,7.8,systemd,open,It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future when the UID/GID will be recycled.
CVE-2020-9327,7.5,sqlite3,open,In SQLite 3.31.1 isAuxiliaryVtabOperator allows attackers to trigger a NULL pointer dereference and segmentation fault because of generated column optimizations.
CVE-2020-11655,7.5,sqlite3,open,SQLite through 3.31.1 allows attackers to cause a denial of service (segmentation fault) via a malformed window-function query because the AggInfo object\'s initialization is mishandled.
CVE-2019-20218,7.5,sqlite3,open,selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.
CVE-2019-19959,7.5,sqlite3,open,ext/misc/zipfile.c in SQLite 3.30.1 mishandles certain uses of INSERT INTO in situations involving embedded \'\\0\' characters in filenames leading to a memory-management error that can be detected by (for example) valgrind.
CVE-2019-19925,7.5,sqlite3,open,zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.
CVE-2019-19923,7.5,sqlite3,open,flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).
CVE-2019-19603,7.5,sqlite3,open,SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW leading to an application crash.
CVE-2019-19244,7.5,sqlite3,open,sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions and also has certain ORDER BY usage.
CVE-2019-15847,7.5,gcc-8,open,The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example within a single execution of a program the output of every __builtin_darn() call may be the same.
CVE-2019-14855,7.5,gnupg2,open,A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.
CVE-2019-12290,7.5,libidn2,open,GNU libidn2 before 2.2.0 fails to perform the roundtrip checks specified in RFC3490 Section 4.2 when converting A-labels to U-labels. This makes it possible in some circumstances for one domain to impersonate another. By creating a malicious domain that matches a target domain except for the inclusion of certain punycoded Unicode characters (that would be discarded when converted first to a Unicode label and then back to an ASCII label) arbitrary domains can be impersonated.
CVE-2020-1752,7,glibc,open,A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that when processed by the glob function would potentially lead to arbitrary code execution. This was fixed in version 2.32.
CVE-2020-1751,7,glibc,open,An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically the backtrace function did not properly check the array bounds when storing the frame address resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.
CVE-2019-16168,6.5,sqlite3,open,In SQLite through 3.29.0 whereLoopAddBtreeIndex in sqlite3.c can crash a browser or other application because of missing validation of a sqlite_stat1 sz field aka a \"severe division by zero in the query planner.\"
CVE-2016-2781,6.5,coreutils,open,chroot in GNU coreutils when used with --userspec allows local users to escape to the parent session via a crafted TIOCSTI ioctl call which pushes characters to the terminal\'s input buffer.
CVE-2019-13627,6.3,libgcrypt20,open,It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5 1.7.6-2+deb9u3 and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.
CVE-2019-19242,5.9,sqlite3,open,SQLite 3.30.1 mishandles pExpr->y.pTab as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.
CVE-2019-12904,5.9,libgcrypt20,open,In Libgcrypt 1.8.4 the C implementation of AES is vulnerable to a flush-and-reload side-channel attack because physical addresses are available to other processes. (The C implementation is used on platforms where an assembly-language implementation is unavailable.)
CVE-2016-10228,5.9,glibc,open,The iconv program in the GNU C Library (aka glibc or libc6) 2.25 and earlier when invoked with the -c option enters an infinite loop when processing invalid multi-byte input sequences leading to a denial of service.
CVE-2020-13435,5.5,sqlite3,open,SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.
CVE-2020-13434,5.5,sqlite3,open,SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.
CVE-2020-10029,5.5,glibc,open,The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.
CVE-2019-19645,5.5,sqlite3,open,alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.
CVE-2020-14155,5.3,pcre3,open,libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.
CVE-2019-19924,5.3,sqlite3,open,SQLite 3.30.1 mishandles certain parser-tree rewriting related to expr.c vdbeaux.c and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.
CVE-2019-1551,5.3,openssl,open,There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024 3-prime RSA1536 and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However for an attack the target would have to re-use the DH512 private key which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).
CVE-2018-7169,5.3,shadow,open,An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group which may allow access to certain filesystem paths if the administrator has used \"group blacklisting\" (e.g. chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular the /proc/self/setgroups knob) to prevent this sort of privilege escalation.
CVE-2019-19126,3.3,glibc,open,On the x86-64 architecture the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.

